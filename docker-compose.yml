version: "3.8"

networks:
  mqtt-network:
    external: true
    name: mqttarisma_mqtt-network
  frontend_rescue-network:
    external: true
    name: frontend_rescue-network

services:
  app:
    container_name: webhook_personal-app-1
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - VERIFY_TOKEN=${VERIFY_TOKEN}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - PHONE_NUMBER_ID=${PHONE_NUMBER_ID}
      - VERSION=${VERSION}
      - BASE_URL=${BASE_URL}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
      - WEBSOCKET_URL=${WEBSOCKET_URL}
      - WEBHOOK_PORT=${WEBHOOK_PORT}
      - CACHE_DB_PATH=${CACHE_DB_PATH}
      - CACHE_CLEANUP_INTERVAL=${CACHE_CLEANUP_INTERVAL}
      - BULK_MAX_WORKERS=${BULK_MAX_WORKERS}
    ports:
      - "5050:5050"
    volumes:
      - sqlite_data:/app/data
    networks:
      - mqtt-network
      - frontend_rescue-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5050/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - VERIFY_TOKEN=${VERIFY_TOKEN}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - PHONE_NUMBER_ID=${PHONE_NUMBER_ID}
      - VERSION=${VERSION}
      - BASE_URL=${BASE_URL}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
      - CACHE_DB_PATH=${CACHE_DB_PATH}
      - CACHE_CLEANUP_INTERVAL=${CACHE_CLEANUP_INTERVAL}
      - BULK_MAX_WORKERS=${BULK_MAX_WORKERS}
    volumes:
      - sqlite_data:/app/data
    networks:
      - mqtt-network
    restart: unless-stopped

volumes:
  sqlite_data:
    driver: local
  redis_data:
    driver: local
