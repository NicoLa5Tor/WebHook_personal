import os
import multiprocessing

# Configuraci√≥n del servidor
bind = f"0.0.0.0:{os.getenv('WEBHOOK_PORT', '5050')}"
workers = 1  # UN SOLO WORKER para threading y FIFO queue
worker_class = "gthread"  # THREADED WORKER
threads = 4  # THREADS en lugar de m√∫ltiples procesos
worker_connections = 1000
timeout = 30
keepalive = 2

# Configuraci√≥n de archivos
pidfile = "/tmp/gunicorn.pid"
user = None
group = None
tmp_upload_dir = None

# Configuraci√≥n de logging
errorlog = "-"  # stderr
accesslog = "-"  # stdout
access_log_format = '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %(D)s'
loglevel = "info"

# Configuraci√≥n de procesos
daemon = False
reload = False
preload_app = True  # IMPORTANTE: Cargar app una vez para FIFO queue
max_requests = 1000
max_requests_jitter = 50

# Configuraci√≥n para funcionar sin supervisord
worker_tmp_dir = "/dev/shm"  # Usar memoria compartida para mejor rendimiento
worker_class = "gthread"  # Mantener threads para mejor compatibilidad
threads = 4  # N√∫mero de threads por worker

# Configuraci√≥n de l√≠mites
limit_request_line = 4094
limit_request_fields = 100
limit_request_field_size = 8190

def when_ready(server):
    server.log.info("üöÄ Servidor listo para recibir conexiones")
    server.log.info("üîß Configuraci√≥n: 1 worker, 4 threads, preload_app=True")

def worker_int(worker):
    worker.log.info("‚ö†Ô∏è Worker recibi√≥ INT o QUIT se√±al")

def pre_fork(server, worker):
    server.log.info("üîÑ Worker spawned (pid: %s)", worker.pid)

def post_fork(server, worker):
    worker.log.info("‚úÖ Worker spawned (pid: %s) - iniciando FIFO queue", worker.pid)
    try:
        from services.message_queue_service import MessageQueueService
        MessageQueueService().restart_processor()
        worker.log.info("‚úÖ Procesador FIFO iniciado en worker %s", worker.pid)
    except Exception as e:
        worker.log.warning("No se pudo iniciar el procesador FIFO: %s", e)

def worker_abort(worker):
    worker.log.info("‚ùå Worker recibi√≥ SIGABRT se√±al")

def on_starting(server):
    server.log.info("üéØ Gunicorn iniciando con configuraci√≥n FIFO optimizada")

def on_reload(server):
    server.log.info("üîÑ Gunicorn recargando...")

def pre_exec(server):
    server.log.info("üìã Pre-exec: Preparando para ejecutar worker")
